/* Plugin Template generated by Pawn Studio */

#include <ZMATCH.sp>

public InitCommand()
{
	RegConsoleCommand("zbot", zcmd_zbot);
}

public Action zcmd_zbot(int client, int args)
{
	char arg[256];
	if(args < 1)
	{
		//ERROR
		return Plugin_Handled;
	}
	GetCmdArg(1, arg, sizeof(arg));
	if(strcmp(arg, "create", false))
	{
		if(!MatchIsCreated)
		{
			//ERROR
			return Plugin_Handled;
		}
		//zbot create TeamName1 TeamName2 DEMORECORD (*optional password config map kniferound allrounds)
		if(args < 4)
		{
			//ERROR
			return Plugin_Handled;
		} else 
		{
			char name1[256];
			char name2[256];
			bool demorec = false;
			GetCmdArg(2, arg, sizeof(arg));//TEAMNAME1
			GetCmdArg(3, arg, sizeof(arg));//TEAMNAME2
			GetCmdArg(4, arg, sizeof(arg));//DEMORECORD
			if(strcmp(arg, "true", false))
			{
				//RECORD DEMO
				demorec = true;
			} else if (strcmp(arg, "false", false))
			{
				//DO NOT RECORD DEMO
				demorec = false;
			}//DEMORCORD
			
			
			if(args >= 5)
			{
				GetCmdArg(5, arg, sizeof(arg));//PASSWORD
			}//PASS
			
			
			if(args >= 6)
			{
				GetCmdArg(6, arg, sizeof(arg));//CONFIG
			}//CFG
			
			
			if(args >= 7)
			{
				GetCmdArg(7, arg, sizeof(arg));//MAP
			}//MAP
			
			
			if(args >= 8)
			{
				GetCmdArg(8, arg, sizeof(arg));//KNIFEROUND
			}//KNIFEROUND
			
			
			if(args >= 9)
			{
				GetCmdArg(9, arg, sizeof(arg));//ALLROUNDS
			}//ALLROUNDS
		}
		return Plugin_Handled;
	}//CREATE
	
	
	if(strcmp(arg, "delete", false))
	{
		if(MatchIsCreated)
		{
			if(args >= 2)
			{
				GetCmdArg(2, arg, sizeof(arg));
				if(strcmp(arg, "restart", false))
				{
					//RESTART SERVER
					return Plugin_Handled;
				}
			}
			//RESTART MAP (changelevel actual_map)
			return Plugin_Handled;
		} else {
			//ERROR
			return Plugin_Handled;
		}
	}//DELTE
	
	if(strcmp(arg, "match", false))
	{
		if(MatchIsCreated)
		{
			if(args >= 2)
			{
				
				
				GetCmdArg(2, arg, sizeof(arg));
				if(strcmp(arg, "pause", false))
				{
					//PAUSE GAME
					return Plugin_Handled;
				}
				
				
				if(strcmp(arg, "unpause", false))
				{
					//UNPAUSE GAME
					return Plugin_Handled;
				}
				
				
				if(strcmp(arg, "forceready", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg));
						if(strcmp(arg, "1", false))
						{
							//FORCE 1st TEAM
							return Plugin_Handled;
						}
						if(strcmp(arg, "2", false))
						{
							//FORCE 2nd TEAM
							return Plugin_Handled;
						}
					} else {
						//FORCE READY BOTH TEAMS
						return Plugin_Handled;
					}
				}//FORCEREADY
				
				if(strcmp(arg, "demo", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg))
						if(strcmp(arg, "true", false))
						{
							//RECORD DEMO
							return Plugin_Handled;
						} else if (strcmp(arg, "false", false))
						{
							//DO NOT RECORD DEMO
							return Plugin_Handled;
						}
					} else {
						//SAY IS RECORD OR NO
						return Plugin_Handled;
					}
				}//DEMORECORD
				
				
				if(strcmp(arg, "map", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg));//MAPNAME
						return Plugin_Handled;
					} else {
						//ERROR
						return Plugin_Handled;
					}
				}//MAPCHANGE
				
				
				if(strcmp(arg, "knife", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg))
						if(strcmp(arg, "true", false))
						{
							//ALLOW KNIFE ROUND
							return Plugin_Handled;
						} else if (strcmp(arg, "false", false))
						{
							//DO NOT ALLOW KNIFE ROUND
							return Plugin_Handled;
						}
					} else {
						//SAY IS KNIFEROUND?
						return Plugin_Handled;
					}
				}//KNIFE ROUND
				
				
				if(strcmp(arg, "allrounds", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg))
						if(strcmp(arg, "true", false))
						{
							//SET ALL ROUNDS
						} else if (strcmp(arg, "false", false))
						{
							//DO NOT SET ALL ROUNDS
						}
					} else {
						//SAY IS ALLROUNDS
						return Plugin_Handled;
					}
				}//ALLROUNDS
				
				
				if(strcmp(arg, "setcfg", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg));//CFG NAME
						return Plugin_Handled;
					} else {
						//ERROR
						return Plugin_Handled;
					}
				}//SETCFG
				
				
				if(strcmp(arg, "setteam1", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg));//TEAMNAME NAME
						return Plugin_Handled;
					} else {
						//ERROR
						return Plugin_Handled;
					}
				}//SETTEAM1
				
				
				if(strcmp(arg, "setteam2", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg));//TEAMNAME NAME
						return Plugin_Handled;
					} else {
						//ERROR
						return Plugin_Handled;
					}
				}//SETTEAM2
				
				
				if(strcmp(arg, "skipknife", false))
				{
					if(args >= 3)
					{
						GetCmdArg(3, arg, sizeof(arg));//KNIFE WINNER
					} else {
						//ERROR
					}
				}//SKIPKNIFE
			} else {
				//ERROR
				return Plugin_Handled;
			}
		} else {
			//ERROR
			return Plugin_Handled;
		}
	}//MATCH
	return Plugin_Handled;
}